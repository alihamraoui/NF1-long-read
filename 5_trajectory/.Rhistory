plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 10))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 15))
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 15))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 6))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 8))
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 8))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 9))
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 9))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
root_cell_id = "2020_26_CACAACATCATGAGGG"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5)
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
root_cell_id = "2020_26_CACAACATCATGAGGG"
root_cell_id = "2020_23_GAGGCCTCAGAGTGTG"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
root_cell_id = "2020_26_CACAACATCATGAGGG"
root_cell_id = "2020_26_GGTTCTCCAAATAAGC"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
root_cell_id = "2020_26_CACAACATCATGAGGG"
root_cell_id = "2020_26_CACTGAAGTACTAACC"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
root_cell_id = "2020_26_TGTGGCGAGTCAACAA"
root_cell_id = "2020_26_CACTGAAGTACTAACC"
root_cell_id = "2020_26_CACAACATCATGAGGG"
sobj$is_root = colnames(sobj) == root_cell_id
sobj$cell_name = colnames(sobj)
root_plot = plot_label_dimplot(sobj, reduction = traj_umap,
col_by = "is_root", col_color = c("gray80", "red"),
label_by = "cell_name", label_val = root_cell_id) +
ggplot2::ggtitle("Root cell") +
ggplot2::theme(plot.title = element_text(hjust = 0.5, face = "bold"),
aspect.ratio = 1) +
Seurat::NoLegend() + Seurat::NoAxes()
sobj$is_root = NULL
sobj$cell_name = NULL
root_plot
set.seed(seed)
my_traj = traj_tinga(sobj,
seed = seed,
expression_assay = "RNA",
expression_slot = "data",
count_assay = "RNA",
count_slot = "counts",
dimred_name = traj_dimred,
dimred_max_dim = traj_max_dims,
root_cell_id = root_cell_id,
tinga_parameters = list(max_nodes = 5))
## Add pseudotime
sobj$pseudotime = my_traj$pseudotime
Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::ggtitle("Pseudotime") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
Seurat::DimPlot(sobj, reduction = traj_umap,
group.by = "seurat_clusters", label = TRUE) +
ggplot2::labs(title = traj_umap) +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
# https://github.com/rstudio/rmarkdown/issues/1453
hooks = knitr::knit_hooks$get()
hook_foldable = function(type) {
force(type)
function(x, options) {
res = hooks[[type]](x, options)
if (isFALSE(options[[paste0("fold_", type)]])) return(res)
paste0(
"<details><summary>", "show", "</summary>\n\n",
res,
"\n\n</details>"
)
}
}
knitr::knit_hooks$set(
output = hook_foldable("output"),
plot = hook_foldable("plot"),
time_it = local({
now = NULL
function(before, options) {
if (options$time_it) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now, units = "secs")
paste("(Time to run :", round(res, digits = 2), "s)")
}
}
}
})
)
set.seed(1337L)
knitr::opts_chunk$set(echo = TRUE, # display code
# display chunk output
message = FALSE,
warning = FALSE,
fold_output = FALSE, # usefull for sessionInfo()
fold_plot = FALSE,
# figure settings
fig.align = 'center',
fig.width = 20,
fig.height = 15,
# something about seed, chunk and Rmarkdown compilation
# https://stackoverflow.com/questions/39417003/long-vectors-not-supported-yet-error-in-rmd-but-not-in-r-script
# cache = TRUE,
cache.lazy = FALSE,
# add runtime after chunk
time_it = FALSE)
library(dplyr)
library(patchwork)
library(ggplot2)
.libPaths()
save_name = "nf1_tumor_cells_subset"
out_dir = "."
sample_info = readRDS(file = paste0(out_dir, "/../1_metadata/nf1_sample_info.rds"))
project_names_oi = sample_info$project_name
graphics::pie(rep(1, nrow(sample_info)),
col = sample_info$color,
labels = sample_info$project_name)
traj_dimred = "mnn"          # to infer trajectory on
traj_umap = "mnn_dm_umap"    # just of visualization
seed = 1337L
traj_max_dims = 41           # to infer trajectory on
sobj = readRDS(paste0(out_dir, "/", save_name, "_sobj.rds"))
sobj
sample_of_origin = Seurat::DimPlot(sobj,
group.by = "project_name",
reduction = traj_umap) +
ggplot2::scale_color_manual(values = sample_info$color,
breaks = sample_info$project_name) +
ggplot2::labs(title = "Sample of origin") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
clusters = Seurat::DimPlot(sobj, group.by = "seurat_clusters",
label = TRUE, reduction = traj_umap) +
ggplot2::labs(title = "Clusters") +
Seurat::NoLegend() + Seurat::NoAxes() +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5, face = "bold"))
sample_of_origin | clusters
Seurat::FeaturePlot(sobj, features = "Pde4b",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = c("lightgray", "#FDBB84", "#EF6548", "#7F0000", "black")) +
ggplot2::theme(aspect.ratio = 1,
plot.subtitle = element_text(hjust = 0.5)) +
Seurat::NoAxes()
Seurat::FeaturePlot(sobj, features = "Sox10",
reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = c("lightgray", "#FDBB84", "#EF6548", "#7F0000", "black")) +
ggplot2::theme(aspect.ratio = 1,
plot.subtitle = element_text(hjust = 0.5)) +
Seurat::NoAxes()
sample_of_origin = Seurat::DimPlot(sobj,
group.by = "project_name",
reduction = traj_umap) +
ggplot2::scale_color_manual(values = sample_info$color,
breaks = sample_info$project_name) +
ggplot2::labs(title = "Sample of origin") +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
clusters = Seurat::DimPlot(sobj, group.by = "seurat_clusters",
label = TRUE, reduction = traj_umap) +
ggplot2::labs(title = "Clusters") +
Seurat::NoLegend() + Seurat::NoAxes() +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5, face = "bold"))
sample_of_origin | clusters
root_cluster = data.frame(Sox10_level = Seurat::FetchData(sobj, vars = "Sox10", slot = "data")[, 1],
clusters = sobj$seurat_clusters) %>%
dplyr::group_by(clusters) %>%
dplyr::summarise(Sox10_avg = mean(Sox10_level)) %>%
dplyr::filter(Sox10_avg == max(Sox10_avg)) %>%
dplyr::pull(clusters) %>%
as.character()
nb_clusters = length(levels(sobj$seurat_clusters))
root_color = aquarius::gg_color_hue(n = nb_clusters)[as.numeric(root_cluster)]
root_cluster = data.frame(Sox10_level = Seurat::FetchData(sobj, vars = "Sox10", slot = "data")[, 1],
clusters = sobj$seurat_clusters) %>%
dplyr::group_by(clusters) %>%
dplyr::summarise(Sox10_avg = mean(Sox10_level)) %>%
dplyr::filter(Sox10_avg == max(Sox10_avg)) %>%
dplyr::pull(clusters) %>%
as.character()
nb_clusters = length(levels(sobj$seurat_clusters))
root_color = seq(15, 375, length = nb_clusters + 1)
root_color = hcl(root_color, l = 65, c = 100)[1:nb_clusters][as.numeric(root_cluster)]
cluster_colors = setNames(nm = levels(sobj$seurat_clusters),
rep("gray80", nb_clusters))
cluster_colors[root_cluster] = "red"
root_cluster
gene_expr = Seurat::FeaturePlot(sobj, features = "Sox10", reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors  = aquarius::color_gene) +
ggplot2::theme(aspect.ratio = 1) +
Seurat::NoAxes()
gene_expr = Seurat::FeaturePlot(sobj, features = "Sox10", reduction = traj_umap) +
ggplot2::scale_color_gradientn(colors = c("lightgray", "#FDBB84", "#EF6548", "#7F0000", "black")) +
ggplot2::theme(aspect.ratio = 1) +
Seurat::NoAxes()
root_plot = clusters = Seurat::DimPlot(sobj, group.by = "seurat_clusters",
cols = cluster_colors,
label = TRUE, reduction = traj_umap) +
ggplot2::labs(title = "Root cluster") +
Seurat::NoLegend() + Seurat::NoAxes() +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5, face = "bold"))
gene_expr | root_plot
BiocManager::install("slingshot")
input_data = sobj@reductions[[traj_dimred]]@cell.embeddings[, c(1:traj_max_dims)]
my_traj = slingshot::slingshot(data = input_data,
clusterLabels = sobj$seurat_clusters,
start.clus = root_cluster)
my_traj
## Add pseudotime
all_pdt = slingshot::slingPseudotime(my_traj)
sobj$pseudotime = all_pdt[, 1][colnames(sobj)]
## Add pseudotime
all_pdt = slingshot::slingPseudotime(my_traj)
head(all_pdt)
head(all_pdt)
sobj$pseudotime = all_pdt[, 1][colnames(sobj)]
plot_list = lapply(c(1:ncol(all_pdt)), FUN = function(lineage) {
sobj$pseudotime = all_pdt[, lineage][colnames(sobj)]
p = Seurat::FeaturePlot(sobj, features = "pseudotime",
reduction = traj_umap) +
ggplot2::ggtitle(paste0("Pseudotime ", lineage)) +
ggplot2::scale_color_gradientn(colors = rev(RColorBrewer::brewer.pal(name = "Spectral", n = 10))) +
ggplot2::theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5)) +
Seurat::NoAxes()
return(p)
})
patchwork::wrap_plots(plot_list)
patchwork::wrap_plots(plot_list)
head(all_pdt)
sobj$pseudotime = all_pdt[, 1][colnames(sobj)]
